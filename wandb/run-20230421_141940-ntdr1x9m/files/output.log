C:\Users\brian\miniconda3\envs\py38\lib\site-packages\torchvision\transforms\functional.py:1603: UserWarning: The default value of the antialias parameter of all the resizing transforms (Resize(), RandomResizedCrop(), etc.) will change from None to True in v0.17, in order to be consistent across the PIL and Tensor backends. To suppress this warning, directly pass antialias=True (recommended, future default), antialias=None (current default, which means False for Tensors and True for PIL), or antialias=False (only works on Tensors - PIL will still use antialiasing). This also applies if you are using the inference transforms from the models weights: update the call to weights.transforms(antialias=True).
  warnings.warn(
Traceback (most recent call last):
  File "C:\Users\brian\miniconda3\envs\py38\lib\site-packages\numpy\core\fromnumeric.py", line 57, in _wrapfunc
    return bound(*args, **kwds)
TypeError: argsort() missing 1 required positional arguments: "stable"
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "c:/Users/brian/Documents/project-1-python-team_16/python/Brian/CNN/Training.py", line 199, in <module>
    model = stupid.runModel(train_load, test_load, device, "CNN")
  File "c:/Users/brian/Documents/project-1-python-team_16/python/Brian/CNN/Training.py", line 143, in runModel
    running_acc += top_k_accuracy(outputs[0], labels[0], (1, 3, 5))
  File "c:/Users/brian/Documents/project-1-python-team_16/python/Brian/CNN/Training.py", line 56, in top_k_accuracy
    max_k_preds = np.argsort(scores, axis=1)[:, -k:][:, ::-1]
  File "<__array_function__ internals>", line 200, in argsort
  File "C:\Users\brian\miniconda3\envs\py38\lib\site-packages\numpy\core\fromnumeric.py", line 1146, in argsort
    return _wrapfunc(a, 'argsort', axis=axis, kind=kind, order=order)
  File "C:\Users\brian\miniconda3\envs\py38\lib\site-packages\numpy\core\fromnumeric.py", line 66, in _wrapfunc
    return _wrapit(obj, method, *args, **kwds)
  File "C:\Users\brian\miniconda3\envs\py38\lib\site-packages\numpy\core\fromnumeric.py", line 43, in _wrapit
    result = getattr(asarray(obj), method)(*args, **kwds)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1
torch.Size([1, 1])
torch.Size([1, 26])